/* file: train_batch.cpp */
/*******************************************************************************
* Copyright 2014-2019 Intel Corporation
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*******************************************************************************/

/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class com_intel_daal_algorithms_binary_adaboost_training_TrainingBatch */

#include "daal.h"
#include "com_intel_daal_algorithms_binary_adaboost_training_TrainingBatch.h"
#include "common_helpers.h"

USING_COMMON_NAMESPACES();

/*
 * Class:     com_intel_daal_algorithms_binary_adaboost_training_TrainingBatch
 * Method:    cInit
 * Signature: (II)J
 */
JNIEXPORT jlong JNICALL Java_com_intel_daal_algorithms_binary_1adaboost_training_TrainingBatch_cInit(JNIEnv * env, jobject thisObj, jint prec,
                                                                                                     jint method)
{
    return jniBatch<adaboost::training::Method, adaboost::training::interface1::Batch, adaboost::training::defaultDense>::newObj(prec, method);
}

/*
 * Class:     com_intel_daal_algorithms_binary_adaboost_training_TrainingBatch
 * Method:    cInitParameter
 * Signature: (JII)J
 */
JNIEXPORT jlong JNICALL Java_com_intel_daal_algorithms_binary_1adaboost_training_TrainingBatch_cInitParameter(JNIEnv * env, jobject thisObj,
                                                                                                              jlong algAddr, jint prec, jint method)
{
    return jniBatch<adaboost::training::Method, adaboost::training::interface1::Batch, adaboost::training::defaultDense>::getParameter(prec, method,
                                                                                                                                       algAddr);
}

/*
 * Class:     com_intel_daal_algorithms_binary_adaboost_training_TrainingBatch
 * Method:    cGetResult
 * Signature: (JII)J
 */
JNIEXPORT jlong JNICALL Java_com_intel_daal_algorithms_binary_1adaboost_training_TrainingBatch_cGetResult(JNIEnv * env, jobject thisObj,
                                                                                                          jlong algAddr, jint prec, jint method)
{
    return jniBatch<adaboost::training::Method, adaboost::training::interface1::Batch, adaboost::training::defaultDense>::getResult(prec, method,
                                                                                                                                    algAddr);
}

/*
 * Class:     com_intel_daal_algorithms_binary_adaboost_training_TrainingBatch
 * Method:    cClone
 * Signature: (JII)J
 */
JNIEXPORT jlong JNICALL Java_com_intel_daal_algorithms_binary_1adaboost_training_TrainingBatch_cClone(JNIEnv * env, jobject thisObj, jlong algAddr,
                                                                                                      jint prec, jint method)
{
    return jniBatch<adaboost::training::Method, adaboost::training::interface1::Batch, adaboost::training::defaultDense>::getClone(prec, method,
                                                                                                                                   algAddr);
}
